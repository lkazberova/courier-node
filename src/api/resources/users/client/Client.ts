/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Preferences } from "../resources/preferences/client/Client";
import { Tenants } from "../resources/tenants/client/Client";
import { Tokens } from "../resources/tokens/client/Client";

export declare namespace Users {
    interface Options {
        environment?: core.Supplier<environments.CourierEnvironment | string>;
        authorizationToken?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class Users {
    constructor(protected readonly _options: Users.Options = {}) {}

    protected _preferences: Preferences | undefined;

    public get preferences(): Preferences {
        return (this._preferences ??= new Preferences(this._options));
    }

    protected _tenants: Tenants | undefined;

    public get tenants(): Tenants {
        return (this._tenants ??= new Tenants(this._options));
    }

    protected _tokens: Tokens | undefined;

    public get tokens(): Tokens {
        return (this._tokens ??= new Tokens(this._options));
    }
}
